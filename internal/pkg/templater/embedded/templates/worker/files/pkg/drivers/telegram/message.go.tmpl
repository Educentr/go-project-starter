package telegram

import (
	"context"
	"errors"

	tgbotapi "github.com/OvyFlash/telegram-bot-api"
)

func (tg *Telegram) SendAnswerCallback(_ context.Context, callbackID string, text string) (bool, error) {
	tgMes, err := tg.bot.Request(tgbotapi.CallbackConfig{
		CallbackQueryID: callbackID,
		Text:            text,
	})

	return tgMes.Ok, err
}

func (tg *Telegram) DeleteMessage(_ context.Context, chatID int64, msgID int) error {
	_, err := tg.bot.Request(tgbotapi.NewDeleteMessage(chatID, msgID))

	return err
}

func (tg *Telegram) SendMessageWithButton(_ context.Context, chatID int64, msg Message) (int, error) {
	switch {
	case len(msg.Images) > 0:
		if len(msg.Images) > 1 {
			return 0, errors.New("send message with more than one image is not supported")
		}

		msgTg := tgbotapi.NewPhoto(chatID, msg.Images[0]);
		msgTg.Caption = msg.Text

		if msg.TextFormat != "" {
			msgTg.ParseMode = msg.TextFormat
		}

		if len(msg.Btn) != 0 {
			msgTg.ReplyMarkup = tgbotapi.NewInlineKeyboardMarkup(msg.Btn...)
		}

		return tg.send(msgTg)
	default:
		msgTg := tgbotapi.NewMessage(chatID, msg.Text)		

		if len(msg.Btn) != 0 {
			msgTg.ReplyMarkup = tgbotapi.NewInlineKeyboardMarkup(msg.Btn...)
		}

		if msg.TextFormat != "" {
			msgTg.ParseMode = msg.TextFormat
		}
		
		return tg.send(msgTg)
	}
}

func (tg *Telegram) send(msg tgbotapi.Chattable) (int, error) {
	if tg.bot == nil {
		return 0, errors.New("telegram bot is not initialized")
	}
	
	tgMsg, err := tg.bot.Send(msg)
	if err != nil {
		return 0, err
	}

	return tgMsg.MessageID, nil
}
