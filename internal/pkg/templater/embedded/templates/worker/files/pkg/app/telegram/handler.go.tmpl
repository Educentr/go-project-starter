package telegram

import (
	"context"
	"errors"

	tgbotapi "github.com/OvyFlash/telegram-bot-api"
	"github.com/gofrs/uuid/v5"
	"{{ .ProjectPath }}/pkg/drivers/telegram"
)

type UnimplementedAdminStatusHandler struct{}

func (UnimplementedAdminStatusHandler) GetUserState(ctx context.Context, tgActor telegram.Actor) (string, error) {
	return "", nil
}

func (UnimplementedAdminStatusHandler) SetLastMsgToUser(ctx context.Context, tgID int64, msg int) error {
	return nil
}

func (UnimplementedAdminStatusHandler) GetLastMsgToUser(ctx context.Context, tgID int64) (int, error) {
	return 0, nil
}

func (UnimplementedAdminStatusHandler) NewUserState(ctx context.Context, tgID int64, state string) error {
	return errors.New("unimplemented")
}

type UnimplementedUpdateHandler struct{}

func (UnimplementedUpdateHandler) PreCheckout(ctx context.Context, preCheckoutQuery *tgbotapi.PreCheckoutQuery) error {
	return ErrUnimplementedHandler
}

func (UnimplementedUpdateHandler) Purchase(ctx context.Context, TgID int64, successfulPayment *tgbotapi.SuccessfulPayment) error {
	return ErrUnimplementedHandler
}

func (UnimplementedUpdateHandler) TextMessage(ctx context.Context, message *tgbotapi.Message) error {
	return ErrUnimplementedHandler
}


func (UnimplementedUpdateHandler)  CallbackQuery(ctx context.Context, callbackQuery *tgbotapi.CallbackQuery) error {
	return ErrUnimplementedHandler
}

var (
	ErrUnimplementedHandler = errors.New("unimplemented handler")
	ErrUnsupportedHandler = errors.New("unsupported handler")    
)

type ParamI interface {
	Pack() string
	Unpack(ctx context.Context, params string) error
}

type CommandName string

func (c CommandName) String() string {
	return string(c)
}

type ButtonCmd struct {
	Text   string
	URL    string
	Name   CommandName
	Params string
}

type RespMessage struct {
	TmMsg       string
	TgFormat    string
	InvoiceData *telegram.InvoiceData
	Photos      string
	ButtonCMDs  [][]ButtonCmd
}

type ResponseRedirect struct {
	Cmd CommandName
	Params string
}

type Response struct {
	InternalRedirect *ResponseRedirect
	Messages      []RespMessage
	NextState     *string
	NotifyMsg     string
	DeleteLastMsg bool
	DeleteCurMsg  bool
}


type DefaultHandler struct{}

func (DefaultHandler) PreCheckout(ctx context.Context, preCheckoutQuery *tgbotapi.PreCheckoutQuery) string {
	return "unimplemented"
}

func (DefaultHandler) ProcessPayment(ctx context.Context, idempotency uuid.UUID, successfulPayment *tgbotapi.SuccessfulPayment) (Response, error) {
	return Response{}, errors.New("unimplemented")
}

func (DefaultHandler) Authorization(ctx context.Context, tgActor telegram.Actor, cmd any, pp string) (context.Context, error) {
	return ctx, nil
}