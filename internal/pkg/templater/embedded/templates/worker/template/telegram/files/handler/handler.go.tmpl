package handler

import (
	"{{ .ProjectPath }}/internal/pkg/service"
	apptg "{{ .ProjectPath }}/pkg/app/telegram"
)

type Handler struct {
	apptg.DefaultHandler
	srv  *service.EmptyService
	tgID int64
}

func NewHandler(srv *service.EmptyService, tgID int64) *Handler {
	return &Handler{
		srv:  srv,
		tgID: tgID,
	}
}

type EmptyParams struct{}

func (e *EmptyParams) Unpack(_ context.Context, _ string) error {
	return nil
}

func (e *EmptyParams) Pack() string {
	return ""
}

const (
	EmptyCommandName apptg.CommandName = ""
)

var (
	ErrEmptyParam              = errors.New("empty parameter")
	ErrInvalidParam            = errors.New("invalid parameter")
	ErrParamsNotEnough         = errors.New("not enough parameters")
)

var (
	UnimplementedResponse = apptg.Response{
		Messages: []apptg.RespMessage{
			{
				TmMsg:      "Unimplemented command",
				ButtonCMDs: [][]apptg.ButtonCmd{},
			},
		},
	}
)