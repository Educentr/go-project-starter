package service

import (
	"context"

	"go.opentelemetry.io/otel/metric"
)

type Service struct {
	ctx context.Context
}

type Option interface {
	apply(*arguments)
}

type arguments struct {
	MeterProvider metric.MeterProvider
}

type optionFunc func(*arguments)

func (o optionFunc) apply(c *arguments) {
	o(c)
}

func WithMeterProvider(mp metric.MeterProvider) Option {
	return optionFunc(func(args *arguments) {
		args.MeterProvider = mp
	})
}

func New(ctx context.Context, opts ...Option) (*Service, error) {
	args := arguments{
		MeterProvider: metric.NewNoopMeterProvider(),
	}

	for _, opt := range opts {
		opt.apply(&args)
	}

	// ToDo meterProvider

	return &Service{
		ctx: ctx,
	}, nil
}
