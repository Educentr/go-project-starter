package healthstate

import (
	"context"

	"github.com/pkg/errors"
	"github.com/prometheus/client_golang/prometheus"

	"{{ .ProjectPath }}/pkg/app/ds"
)

type Service struct {
	Bucket ds.ServerBucket
}

var (
	errAppReadyNil   = errors.New("app ready pointer can't be nil")
	errAppInfoNil    = errors.New("app info pointer can't be nil")
)

func (s *Service) Init(_ context.Context) error {
	return nil
}

func (s *Service) InitState(_ context.Context, _ []ds.IDriver, bucket ds.ServerBucket, _ *prometheus.Registry) error {
	if bucket.AppInfo == nil {
		return errAppInfoNil
	}

	if bucket.AppReady == nil {
		return errAppReadyNil
	}

	s.Bucket = bucket

	return nil
}

func (s *Service) GetBucket() ds.ServerBucket {
	return s.Bucket
}
